<feed xmlns="http://www.w3.org/2005/Atom"> <id>/</id><title>剑封余华</title><subtitle>这是通过Chirpy主题配置而成的</subtitle> <updated>2022-09-23T07:55:15+00:00</updated> <author> <name>剑封余华</name> <uri>/</uri> </author><link rel="self" type="application/atom+xml" href="/feed.xml"/><link rel="alternate" type="text/html" hreflang="zh-CN" href="/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 剑封余华 </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>快速入门系列（四）——第一个Flask程序</title><link href="/posts/flask-fast-start/" rel="alternate" type="text/html" title="快速入门系列（四）——第一个Flask程序" /><published>2022-09-23T06:00:00+00:00</published> <updated>2022-09-23T06:00:00+00:00</updated> <id>/posts/flask-fast-start/</id> <content src="/posts/flask-fast-start/" /> <author> <name>剑封余华</name> </author> <category term="快速入门" /> <summary> Flask是什么？ 如果你做过Web开发，并且知道什么是框架，那你只需要记住，Flask是一个非常轻量级的Web应用开发框架 如果你没有做过Web开发，但学过数据库、高级编程语言和html+css+JavaScript三剑客，那么你可以这样理解Flask： Flask是一门用Python开发的语言，你可以只用这门语言就完成一个软件的开发，包括这个软件的页面开发、数据库开发和服务器开发 那么这篇文章我们将教大家如何写第一个Flask程序，按照计算机学习的传统艺能，我们第一个程序当然是教大家输出一个Hello World！！！嘿嘿嘿！！！ 前方高能！！！请准备好一台电脑！！！跟着动手操作！！！ 软件准备 在开始我们的程序编写前，先根据以下安装几个软件： Python（必备，下Python3.x系列版本的，自带pip）:https://www.pyt... </summary> </entry> <entry><title>快速入门系列（三）——GitHub和Gitee注册</title><link href="/posts/github&amp;gitee-signup/" rel="alternate" type="text/html" title="快速入门系列（三）——GitHub和Gitee注册" /><published>2022-09-22T09:00:00+00:00</published> <updated>2022-09-22T12:49:24+00:00</updated> <id>/posts/github&amp;gitee-signup/</id> <content src="/posts/github&amp;gitee-signup/" /> <author> <name>剑封余华</name> </author> <category term="快速入门" /> <summary> 我们前面已经教过如何使用Git，当时提到过远程仓库，那么： 如何快速拥有一个自己的远程仓库呢？ 主流的远程仓库有： GitHub：全世界最大的男性交友网站（doge）。开个玩笑，其实它是一个面向开源的软件项目托管平台。即，你可以用它获得一个免费的远程仓库。GitHub仓库的创建简单、方便，唯一不足的就是，容易掉线。。。 Gitee：国内的软件项目托管平台。因为是国内的，所以好处就是不会掉线，并且不存在语言障碍。对个人而言它也是免费的。 GitLab：GitLab支持自行搭建远程仓库，一般企业都会搭建自己的远程仓库。对新手不太友好，但是嘛最终都会学到滴~ 我们主要教大家如何注册GitHub和Gitee 注：Gitee注册及创建仓库教学在下面，大家根据自己的需要选择性注册。 注册GitHub并创建自己的远程仓库 首先，打开GitHub... </summary> </entry> <entry><title>快速入门系列（一）——Git简介及安装教程</title><link href="/posts/git-install/" rel="alternate" type="text/html" title="快速入门系列（一）——Git简介及安装教程" /><published>2022-09-22T07:30:00+00:00</published> <updated>2022-09-22T07:30:00+00:00</updated> <id>/posts/git-install/</id> <content src="/posts/git-install/" /> <author> <name>剑封余华</name> </author> <category term="快速入门" /> <summary> 什么是Git？ 举个例子： 第一天，甲方让你做了一个方案A。 第二天，甲方让你改方案A为方案B。 第三天，甲方让你找回方案A。 如果你直接在方案A的文件上改内容并保存，那么等你需要找回方案A的时候，就会发现找不到了，这时候就很绝望QAQ 而如果你将方案A改后的内容另存为方案B，你又需要多建一个文件，多保存一份，慢慢的随着方案的增多，你就会发现，电脑存储空间不够了啊啊啊！！！ 于是，发明了Linux的带佬Linus，便用了==一周==时间，写出了Git！！！ 它让我们可以方便的找回方案A，并且只保存方案B中和方案A不同的部分，节省我们的存储空间！！！ 同样的，Git适用于我们对项目进行更改，因为我们的软件项目，可能随时需要我们更改代码 那么，Git怎么用呢？ 我们先要下载Git： 下载链接：ht... </summary> </entry> <entry><title>快速入门系列（二）——Git使用教程</title><link href="/posts/git-use/" rel="alternate" type="text/html" title="快速入门系列（二）——Git使用教程" /><published>2022-09-22T07:30:00+00:00</published> <updated>2022-09-22T12:40:06+00:00</updated> <id>/posts/git-use/</id> <content src="/posts/git-use/" /> <author> <name>剑封余华</name> </author> <category term="快速入门" /> <summary> 如何开始使用Git 首先，打开我们的项目文件夹，在空白处鼠标右键，点击Git Bash Here（Win10，Win11用户如果看不到的话点击“显示更多选项”，就可以看到了： 其次，我们得有个身份，表明这个项目，是我做的： git config user.name username git config user.email username@email.com username是你的用户名，你可以随意取 username@email.com是你的邮箱地址，你可以填你的qq邮箱 然后，我们要把我们的文件，改造成一个“仓库”，也就是初始化： cd 你需要初始化的文件夹的绝对路径 git init ==注意：==你的项目文件应该放在同一个文件夹里，因为git的初始化是对整个文件夹的初始化 接着，我们就去写BUG啦... </summary> </entry> <entry><title>你好，世界！</title><link href="/posts/hello-world/" rel="alternate" type="text/html" title="你好，世界！" /><published>2022-09-22T03:00:00+00:00</published> <updated>2022-09-22T03:00:00+00:00</updated> <id>/posts/hello-world/</id> <content src="/posts/hello-world/" /> <author> <name>剑封余华</name> </author> <category term="随笔" /> <summary> 感谢关注～ 这里可以放代码片段噢～ //代码片段 int main(){ hello world; } </summary> </entry> </feed>
